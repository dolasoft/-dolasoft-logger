import*as e from"fs";import*as t from"path";import{useCallback as s,useRef as i,useEffect as n}from"react";var LogLevel,LogStrategy;!function(LogLevel){LogLevel[LogLevel.DEBUG=0]="DEBUG",LogLevel[LogLevel.INFO=1]="INFO",LogLevel[LogLevel.WARN=2]="WARN",LogLevel[LogLevel.ERROR=3]="ERROR",LogLevel[LogLevel.FATAL=4]="FATAL"}(LogLevel||(LogLevel={})),function(LogStrategy){LogStrategy.CONSOLE="console",LogStrategy.MEMORY="memory",LogStrategy.DATABASE="database",LogStrategy.FILE="file",LogStrategy.HYBRID="hybrid"}(LogStrategy||(LogStrategy={}));const r={strategy:"production"===process.env.NODE_ENV?LogStrategy.HYBRID:LogStrategy.CONSOLE,level:"production"===process.env.NODE_ENV?LogLevel.WARN:LogLevel.DEBUG,maxMemoryEntries:parseInt(process.env.LOG_MAX_MEMORY_ENTRIES||"1000"),maxDatabaseEntries:parseInt(process.env.LOG_MAX_DATABASE_ENTRIES||"10000"),maxFileEntries:parseInt(process.env.LOG_MAX_FILE_ENTRIES||"5000"),enableConsole:"production"!==process.env.NODE_ENV,enableDatabase:!0,enableFile:"production"===process.env.NODE_ENV,databaseTable:"error_logs",filePath:process.env.LOG_FILE_PATH||"./logs/app.log",maxFileSize:parseInt(process.env.LOG_MAX_FILE_SIZE||"10485760"),maxFiles:parseInt(process.env.LOG_MAX_FILES||"5"),format:"production"===process.env.NODE_ENV?"json":"pretty",includeStack:!0,includeMetadata:!0};function a(e={}){return{...r,...e}}function o(e){const t=[];return e.maxMemoryEntries&&e.maxMemoryEntries<1&&t.push("maxMemoryEntries must be greater than 0"),e.maxDatabaseEntries&&e.maxDatabaseEntries<1&&t.push("maxDatabaseEntries must be greater than 0"),e.maxFileEntries&&e.maxFileEntries<1&&t.push("maxFileEntries must be greater than 0"),e.maxFileSize&&e.maxFileSize<1024&&t.push("maxFileSize must be at least 1KB"),e.maxFiles&&e.maxFiles<1&&t.push("maxFiles must be greater than 0"),e.filePath&&!e.filePath.endsWith(".log")&&t.push("filePath should end with .log extension"),t}class l{constructor(){this.name="console",this.config={}}configure(e){this.config=e}async log(e){if(!this.config.enableConsole)return;const t=e.timestamp.toISOString(),s=LogLevel[e.level],i=e.context?` ${JSON.stringify(e.context)}`:"",n=e.metadata?` ${JSON.stringify(e.metadata)}`:"";let r=`[${t}] ${s}: ${e.message}${i}${n}`;switch(e.error&&this.config.includeStack&&(r+=`\nError: ${e.error.message}`,e.stack&&(r+=`\nStack: ${e.stack}`)),e.level){case LogLevel.DEBUG:case LogLevel.INFO:case LogLevel.WARN:case LogLevel.ERROR:case LogLevel.FATAL:}}}class c{constructor(){this.name="memory",this.config={},this.logs=[]}configure(e){this.config=e}async log(e){this.logs.push(e);const t=this.config.maxMemoryEntries||1e3;this.logs.length>t&&(this.logs=this.logs.slice(-t))}getLogs(e){const t=this.logs.slice();return e?t.slice(-e):t}getErrorLogs(e){const t=this.logs.filter(e=>e.level>=LogLevel.ERROR);return e?t.slice(-e):t}clear(){this.logs=[]}getStats(){const e=this.logs.filter(e=>e.level>=LogLevel.ERROR).length;return{count:this.logs.length,errors:e,maxEntries:this.config.maxMemoryEntries||1e3}}}class g{constructor(){this.name="database",this.config={},this.logs=[]}configure(e){this.config=e}async log(e){if(this.config.enableDatabase&&!(e.level<LogLevel.ERROR))try{this.logs.push(e);const t=this.config.maxDatabaseEntries||1e4;this.logs.length>t&&(this.logs=this.logs.slice(-t))}catch(e){}}async query(e={}){let t=this.logs.slice();return void 0!==e.level&&(t=t.filter(t=>t.level>=e.level)),e.startDate&&(t=t.filter(t=>t.timestamp>=e.startDate)),e.endDate&&(t=t.filter(t=>t.timestamp<=e.endDate)),e.userId&&(t=t.filter(t=>t.userId===e.userId)),e.appSlug&&(t=t.filter(t=>t.appSlug===e.appSlug)),e.offset&&(t=t.slice(e.offset)),e.limit&&(t=t.slice(0,e.limit)),t}async clear(){this.logs=[]}getStats(){const e=this.logs.filter(e=>e.level>=LogLevel.ERROR).length;return{count:this.logs.length,errors:e,maxEntries:this.config.maxDatabaseEntries||1e4}}}class h{constructor(){this.name="file",this.config={},this.fileConfig={},this.logs=[],this.filePath="",this.currentFileSize=0}configure(e){this.config={enableFile:e.enableFile||!1,...e},this.fileConfig={filePath:e.filePath||"./logs/app.log",directory:e.directory||"./logs",fileName:e.fileName||"app.log",maxFileSize:e.maxFileSize||10485760,maxFiles:e.maxFiles||5,enableRotation:void 0===e.enableRotation||e.enableRotation,enableCompression:e.enableCompression||!1,logLevels:e.logLevels||[LogLevel.ERROR,LogLevel.FATAL],includeTimestamp:void 0===e.includeTimestamp||e.includeTimestamp,includeLevel:void 0===e.includeLevel||e.includeLevel,format:e.format||"json",overwrite:e.overwrite||!1,append:void 0===e.append||e.append},this.setupFilePath(),this.ensureDirectoryExists()}setupFilePath(){this.fileConfig.filePath?this.filePath=this.fileConfig.filePath:this.fileConfig.directory&&this.fileConfig.fileName?this.filePath=t.join(this.fileConfig.directory,this.fileConfig.fileName):this.filePath="./logs/app.log"}ensureDirectoryExists(){const s=t.dirname(this.filePath);e.existsSync(s)||e.mkdirSync(s,{recursive:!0})}async log(e){if(this.config.enableFile&&(!this.fileConfig.logLevels||this.fileConfig.logLevels.includes(e.level)))try{this.logs.push(e);const t=this.config.maxFileEntries||5e3;this.logs.length>t&&(this.logs=this.logs.slice(-t)),await this.writeToFile(e),this.fileConfig.enableRotation&&await this.rotateIfNeeded()}catch(e){}}async writeToFile(t){const s=this.formatLogEntry(t),i=e.existsSync(this.filePath);this.fileConfig.overwrite&&!i?(e.writeFileSync(this.filePath,s+"\n"),this.currentFileSize=s.length+1):this.fileConfig.append||i?(e.appendFileSync(this.filePath,s+"\n"),this.currentFileSize+=s.length+1):(e.writeFileSync(this.filePath,s+"\n"),this.currentFileSize=s.length+1)}formatLogEntry(e){const t={};!1!==this.fileConfig.includeTimestamp&&(t.timestamp=e.timestamp.toISOString()),!1!==this.fileConfig.includeLevel&&(t.level=LogLevel[e.level]),t.message=e.message,e.context&&(t.context=e.context),e.metadata&&(t.metadata=e.metadata),e.userId&&(t.userId=e.userId),e.requestId&&(t.requestId=e.requestId),e.appSlug&&(t.appSlug=e.appSlug),e.error&&(t.error=e.error.message),e.stack&&(t.stack=e.stack);const s=this.fileConfig.format||"json";if("json"===s)return JSON.stringify(t);if("pretty"===s)return JSON.stringify(t,null,2);{const s=!1!==this.fileConfig.includeTimestamp?`[${t.timestamp}] `:"",i=!1!==this.fileConfig.includeLevel?`${t.level} `:"",n=e.context?` ${JSON.stringify(e.context)}`:"",r=e.metadata?` ${JSON.stringify(e.metadata)}`:"";return`${s}${i}${t.message}${n}${r}`}}async rotateIfNeeded(){try{const t=e.statSync(this.filePath),s=this.fileConfig.maxFileSize||10485760;t.size>s&&await this.rotateFile()}catch(e){}}async rotateFile(){const t=this.fileConfig.maxFiles||5,s=this.filePath.replace(".log","");for(let i=t-1;i>0;i--){const n=`${s}.${i}.log`,r=`${s}.${i+1}.log`;e.existsSync(n)&&(i===t-1?e.unlinkSync(n):e.renameSync(n,r))}e.existsSync(this.filePath)&&(e.renameSync(this.filePath,`${s}.1.log`),this.currentFileSize=0)}getStats(){const e=this.logs.filter(e=>e.level>=LogLevel.ERROR).length;return{count:this.logs.length,errors:e,maxEntries:this.config.maxFileEntries||5e3,filePath:this.filePath}}async cleanup(){}}function u(){if("undefined"!=typeof require)try{const{randomUUID:e}=require("crypto");return e()}catch{}return"undefined"!=typeof globalThis&&globalThis.crypto&&globalThis.crypto.randomUUID?globalThis.crypto.randomUUID():"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,e=>{const t=16*Math.random()|0;return("x"===e?t:3&t|8).toString(16)})}function f(){return Math.random().toString(36).substring(2,10)}function d(e){const t=f();return e?`${e}-${t}`:t}class LoggerService{constructor(e={}){this.adapters=new Map,this.config=a(e);const t=o(this.config);if(t.length>0)throw new Error(`Invalid logger configuration: ${t.join(", ")}`);this.initializeAdapters()}static getInstance(e){return LoggerService.instance||(LoggerService.instance=new LoggerService(e)),LoggerService.instance}static create(e={}){return new LoggerService(e)}static reset(){LoggerService.instance&&(LoggerService.instance.cleanup(),LoggerService.instance=null)}initializeAdapters(){if(this.config.enableConsole){const e=new l;e.configure(this.config),this.adapters.set("console",e)}const e=new c;if(e.configure(this.config),this.adapters.set("memory",e),this.config.enableDatabase){const e=new g;e.configure(this.config),this.adapters.set("database",e)}if(this.config.enableFile){const e=new h;e.configure(this.config),this.adapters.set("file",e)}}shouldLog(e){return e>=this.config.level}createLogEntry(e,t,s,i,n){const r={id:this.generateId(),timestamp:new Date,level:e,message:t,context:s,error:i,metadata:n};return this.config.includeStack&&i?.stack&&(r.stack=i.stack),r}generateId(){return u()}async log(e){if(!this.shouldLog(e.level))return;const t=[];switch(this.config.strategy){case LogStrategy.CONSOLE:this.adapters.has("console")&&t.push(this.adapters.get("console").log(e));break;case LogStrategy.MEMORY:this.adapters.has("memory")&&t.push(this.adapters.get("memory").log(e));break;case LogStrategy.DATABASE:this.adapters.has("database")&&t.push(this.adapters.get("database").log(e));break;case LogStrategy.FILE:this.adapters.has("file")&&t.push(this.adapters.get("file").log(e));break;case LogStrategy.HYBRID:for(const s of this.adapters.values())t.push(s.log(e))}await Promise.allSettled(t)}debug(e,t,s){const i=this.createLogEntry(LogLevel.DEBUG,e,t,void 0,s);this.log(i)}info(e,t,s){const i=this.createLogEntry(LogLevel.INFO,e,t,void 0,s);this.log(i)}warn(e,t,s){const i=this.createLogEntry(LogLevel.WARN,e,t,void 0,s);this.log(i)}error(e,t,s,i){const n=this.createLogEntry(LogLevel.ERROR,e,s,t,i);this.log(n)}fatal(e,t,s,i){const n=this.createLogEntry(LogLevel.FATAL,e,s,t,i);this.log(n)}async getLogs(e,t){if(e&&this.adapters.has(e)){const s=this.adapters.get(e);if("query"in s)return s.query({limit:t})}if(this.adapters.has("memory")){return this.adapters.get("memory").getLogs(t)}return[]}async getErrorLogs(e){return(await this.getLogs(void 0,e)).filter(e=>e.level>=LogLevel.ERROR)}async clearLogs(e){if(e&&this.adapters.has(e)){const t=this.adapters.get(e);"clear"in t&&await t.clear()}else for(const e of this.adapters.values())"clear"in e&&await e.clear()}getStats(){const e={memory:0,database:0,file:0,errors:0,maxMemory:this.config.maxMemoryEntries||1e3,maxDatabase:this.config.maxDatabaseEntries||1e4,maxFile:this.config.maxFileEntries||5e3};for(const[t,s]of this.adapters)if("getStats"in s){const i=s.getStats();e[t]=i.count||0,i.errors&&(e.errors+=i.errors)}return e}updateConfig(e){this.config={...this.config,...e};for(const e of this.adapters.values())e.configure&&e.configure(this.config)}async cleanup(){for(const e of this.adapters.values())e.cleanup&&await e.cleanup()}}function m(e={}){const{appSlug:t,userId:i,requestId:n,logger:r}=e,a=s((e,s,a,o,l)=>{const c={...l,appSlug:t,userId:i,requestId:n},g=r||LoggerService.getInstance();switch(e){case LogLevel.DEBUG:g.debug(s,a,c);break;case LogLevel.INFO:g.info(s,a,c);break;case LogLevel.WARN:g.warn(s,a,c);break;case LogLevel.ERROR:g.error(s,o,a,c);break;case LogLevel.FATAL:g.fatal(s,o,a,c)}},[t,i,n,r]);return{debug:s((e,t,s)=>{a(LogLevel.DEBUG,e,t,void 0,s)},[a]),info:s((e,t,s)=>{a(LogLevel.INFO,e,t,void 0,s)},[a]),warn:s((e,t,s)=>{a(LogLevel.WARN,e,t,void 0,s)},[a]),error:s((e,t,s,i)=>{a(LogLevel.ERROR,e,s,t,i)},[a]),fatal:s((e,t,s,i)=>{a(LogLevel.FATAL,e,s,t,i)},[a])}}LoggerService.instance=null;class p{constructor(e){this.requestId="",this.logger=e||LoggerService.getInstance()}static getInstance(e){return p.instance||(p.instance=new p(e)),p.instance}static reset(){p.instance=null}setRequestContext(e){this.requestId=e?.headers.get("x-request-id")||this.generateId(),this.appSlug=this.extractAppSlug(e),this.userId=this.extractUserId(e)}generateId(){return d("req")}extractAppSlug(e){if(!e)return;const t=new URL(e.url).pathname.split("/"),s=t.findIndex(e=>"apps"===e)+1;if(s>0&&t[s])return t[s];const i=t.findIndex(e=>"api"===e);return i>0&&t[i+1]&&"admin"!==t[i+1]?t[i+1]:void 0}extractUserId(e){if(!e)return;const t=e.headers.get("authorization");return t?.startsWith("Bearer ")?"user-from-token":void 0}createContext(e){return{requestId:this.requestId,appSlug:this.appSlug,userId:this.userId,...e}}debug(e,t){this.logger.debug(e,this.createContext(t))}info(e,t){this.logger.info(e,this.createContext(t))}warn(e,t){this.logger.warn(e,this.createContext(t))}error(e,t,s){this.logger.error(e,t,this.createContext(s))}fatal(e,t,s){this.logger.fatal(e,t,this.createContext(s))}}const E=p.getInstance();function x(e,t){const s=t?p.getInstance(t):E;return s.setRequestContext(e),s}const I=(e,t,s,i,n)=>{const r=n?p.getInstance(n):E;r.setRequestContext(e),r.error(t,s,i)},y=(e,t,s,i)=>{const n=i?p.getInstance(i):E;n.setRequestContext(e),n.info(t,s)},R=(e,t,s,i)=>{const n=i?p.getInstance(i):E;n.setRequestContext(e),n.warn(t,s)},v="development",S="production",b=()=>process.env.NODE_ENV===v,O=()=>process.env.NODE_ENV===S;function F(e={}){const{appSlug:t,userId:r,requestId:a,logger:o,enableConsole:l=!0,enableRemote:c=!1,remoteEndpoint:g="/api/logs",strategy:h=(b()?LogStrategy.CONSOLE:LogStrategy.MEMORY),level:u=(O()?LogLevel.WARN:LogLevel.DEBUG)}=e,f=i(null);n(()=>{if("undefined"==typeof window)return;const e=o||LoggerService.getInstance({strategy:h,level:u,enableConsole:l&&(h===LogStrategy.CONSOLE||h===LogStrategy.HYBRID),enableDatabase:!1,enableFile:!1});f.current=e},[o,l]);const d=s((e,s,i,n,o)=>{if(!f.current)return;const l={...o,appSlug:t,userId:r,requestId:a,userAgent:navigator.userAgent,url:window.location.href,timestamp:(new Date).toISOString()};switch(e){case LogLevel.DEBUG:f.current.debug(s,i,l);break;case LogLevel.INFO:f.current.info(s,i,l);break;case LogLevel.WARN:f.current.warn(s,i,l);break;case LogLevel.ERROR:f.current.error(s,n,i,l);break;case LogLevel.FATAL:f.current.fatal(s,n,i,l)}c&&g&&m(e,s,i,n,l)},[t,r,a,c,g]),m=s(async(e,t,s,i,n)=>{try{await fetch(g,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({level:e,message:t,context:s,error:i?{name:i.name,message:i.message,stack:i.stack}:void 0,metadata:n})})}catch(e){}},[g]);return{debug:s((e,t,s)=>{d(LogLevel.DEBUG,e,t,void 0,s)},[d]),info:s((e,t,s)=>{d(LogLevel.INFO,e,t,void 0,s)},[d]),warn:s((e,t,s)=>{d(LogLevel.WARN,e,t,void 0,s)},[d]),error:s((e,t,s,i)=>{d(LogLevel.ERROR,e,s,t,i)},[d]),fatal:s((e,t,s,i)=>{d(LogLevel.FATAL,e,s,t,i)},[d])}}class N{constructor(e={}){const{appSlug:t,userId:s,requestId:i,logger:n,enableConsole:r=!0,enableRemote:a=!1,remoteEndpoint:o="/api/logs",strategy:l=("development"===process.env.NODE_ENV?LogStrategy.CONSOLE:LogStrategy.MEMORY),level:c=("production"===process.env.NODE_ENV?LogLevel.WARN:LogLevel.DEBUG)}=e;this.appSlug=t,this.userId=s,this.requestId=i,this.enableRemote=a,this.remoteEndpoint=o,this.logger=n||LoggerService.getInstance({strategy:l,level:c,enableConsole:r&&(l===LogStrategy.CONSOLE||l===LogStrategy.HYBRID),enableDatabase:!1,enableFile:!1})}createContext(e){return{appSlug:this.appSlug,userId:this.userId,requestId:this.requestId,userAgent:"undefined"!=typeof window?navigator.userAgent:void 0,url:"undefined"!=typeof window?window.location.href:void 0,timestamp:(new Date).toISOString(),...e}}async sendToRemote(e,t,s,i,n){if(this.enableRemote&&"undefined"!=typeof window)try{await fetch(this.remoteEndpoint,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({level:e,message:t,context:s,error:i?{name:i.name,message:i.message,stack:i.stack}:void 0,metadata:n})})}catch(e){}}debug(e,t,s){const i=this.createContext(t);this.logger.debug(e,i,s),this.sendToRemote(LogLevel.DEBUG,e,i,void 0,s)}info(e,t,s){const i=this.createContext(t);this.logger.info(e,i,s),this.sendToRemote(LogLevel.INFO,e,i,void 0,s)}warn(e,t,s){const i=this.createContext(t);this.logger.warn(e,i,s),this.sendToRemote(LogLevel.WARN,e,i,void 0,s)}error(e,t,s,i){const n=this.createContext(s);this.logger.error(e,t,n,i),this.sendToRemote(LogLevel.ERROR,e,n,t,i)}fatal(e,t,s,i){const n=this.createContext(s);this.logger.fatal(e,t,n,i),this.sendToRemote(LogLevel.FATAL,e,n,t,i)}}function w(e={}){return new N(e)}function A(e){const t=e||LoggerService.getInstance();return(e,s,i)=>{const n=Date.now(),r=e.headers["x-request-id"]||L();s.setHeader("x-request-id",r),t.info("Request started",{method:e.method,url:e.url,userAgent:e.get("User-Agent"),ip:e.ip,requestId:r});const a=s.end;s.end=function(i,o){const l=Date.now()-n;return t.info("Request completed",{method:e.method,url:e.url,statusCode:s.statusCode,duration:`${l}ms`,requestId:r}),a.call(this,i,o)},s.on("error",s=>{t.error("Response error",s,{method:e.method,url:e.url,requestId:r})}),i()}}function C(e){const t=e||LoggerService.getInstance();return(e,s,i,n)=>{const r=s.headers["x-request-id"]||L();t.error("Unhandled error",e,{method:s.method,url:s.url,requestId:r,stack:e.stack});const a="development"===process.env.NODE_ENV;i.status(500).json({error:"Internal Server Error",requestId:r,...a&&{message:e.message,stack:e.stack}})}}function D(e){return LoggerService.getInstance({strategy:LogStrategy.HYBRID,enableConsole:!0,enableDatabase:!0,enableFile:O(),...e})}function L(){return d("req")}class T{static resetAll(){LoggerService.reset(),p.reset()}static getState(){return{loggerService:LoggerService.getInstance(),serverLogger:p.getInstance()}}static isInitialized(){try{return LoggerService.getInstance(),p.getInstance(),!0}catch{return!1}}}const q=T.resetAll,k=T.isInitialized;function P(e){return LoggerService.getInstance(e)}const M=(e,t,s)=>{P().error(e,t,s)},$=(e,t)=>{P().info(e,t)},_=(e,t)=>{P().warn(e,t)},B=(e,t)=>{P().debug(e,t)},U=(e,t,s)=>{P().fatal(e,t,s)};export{l as ConsoleAdapter,g as DatabaseAdapter,h as FileAdapter,LogLevel,LogStrategy,LoggerService,c as MemoryAdapter,N as NextJSClientLogger,p as ServerLogger,T as SingletonManager,k as areSingletonsInitialized,a as createConfig,C as createErrorHandler,D as createExpressLogger,A as createLoggingMiddleware,w as createNextJSClientLogger,P as default,d as generateRequestId,f as generateShortId,u as generateUUID,P as getLogger,x as getServerLogger,I as logApiError,y as logApiInfo,R as logApiWarn,B as logDebug,M as logError,U as logFatal,$ as logInfo,_ as logWarn,q as resetAllSingletons,m as useLogger,F as useNextJSClientLogger,o as validateConfig};
//# sourceMappingURL=index.esm.js.map
