"use strict";var LogLevel,LogStrategy,e=require("react");exports.LogLevel=void 0,(LogLevel=exports.LogLevel||(exports.LogLevel={}))[LogLevel.DEBUG=0]="DEBUG",LogLevel[LogLevel.INFO=1]="INFO",LogLevel[LogLevel.WARN=2]="WARN",LogLevel[LogLevel.ERROR=3]="ERROR",LogLevel[LogLevel.FATAL=4]="FATAL",exports.LogStrategy=void 0,(LogStrategy=exports.LogStrategy||(exports.LogStrategy={})).CONSOLE="console",LogStrategy.MEMORY="memory",LogStrategy.DATABASE="database",LogStrategy.FILE="file",LogStrategy.HYBRID="hybrid";const t={strategy:"production"===process.env.NODE_ENV?exports.LogStrategy.HYBRID:exports.LogStrategy.CONSOLE,level:"production"===process.env.NODE_ENV?exports.LogLevel.WARN:exports.LogLevel.DEBUG,maxMemoryEntries:parseInt(process.env.LOG_MAX_MEMORY_ENTRIES||"1000"),maxDatabaseEntries:parseInt(process.env.LOG_MAX_DATABASE_ENTRIES||"10000"),maxFileEntries:parseInt(process.env.LOG_MAX_FILE_ENTRIES||"5000"),enableConsole:"production"!==process.env.NODE_ENV,enableDatabase:!0,enableFile:"production"===process.env.NODE_ENV,databaseTable:"error_logs",filePath:process.env.LOG_FILE_PATH||"./logs/app.log",maxFileSize:parseInt(process.env.LOG_MAX_FILE_SIZE||"10485760"),maxFiles:parseInt(process.env.LOG_MAX_FILES||"5"),format:"production"===process.env.NODE_ENV?"json":"pretty",includeStack:!0,includeMetadata:!0};class s{constructor(){this.name="console",this.config={}}configure(e){this.config=e}async log(e){if(!this.config.enableConsole)return;const t=e.timestamp.toISOString(),s=exports.LogLevel[e.level],o=e.context?` ${JSON.stringify(e.context)}`:"",r=e.metadata?` ${JSON.stringify(e.metadata)}`:"";let a=`[${t}] ${s}: ${e.message}${o}${r}`;switch(e.error&&this.config.includeStack&&(a+=`\nError: ${e.error.message}`,e.stack&&(a+=`\nStack: ${e.stack}`)),e.level){case exports.LogLevel.DEBUG:case exports.LogLevel.INFO:case exports.LogLevel.WARN:case exports.LogLevel.ERROR:case exports.LogLevel.FATAL:}}}class o{constructor(){this.name="memory",this.config={},this.logs=[]}configure(e){this.config=e}async log(e){this.logs.push(e);const t=this.config.maxMemoryEntries||1e3;this.logs.length>t&&(this.logs=this.logs.slice(-t))}getLogs(e){const t=this.logs.slice();return e?t.slice(-e):t}getErrorLogs(e){const t=this.logs.filter(e=>e.level>=exports.LogLevel.ERROR);return e?t.slice(-e):t}clear(){this.logs=[]}getStats(){const e=this.logs.filter(e=>e.level>=exports.LogLevel.ERROR).length;return{count:this.logs.length,errors:e,maxEntries:this.config.maxMemoryEntries||1e3}}}class r{constructor(e={}){this.adapters=new Map,this.config=function(e={}){return{...t,...e}}(e);const s=function(e){const t=[];return e.maxMemoryEntries&&e.maxMemoryEntries<1&&t.push("maxMemoryEntries must be greater than 0"),e.maxDatabaseEntries&&e.maxDatabaseEntries<1&&t.push("maxDatabaseEntries must be greater than 0"),e.maxFileEntries&&e.maxFileEntries<1&&t.push("maxFileEntries must be greater than 0"),e.maxFileSize&&e.maxFileSize<1024&&t.push("maxFileSize must be at least 1KB"),e.maxFiles&&e.maxFiles<1&&t.push("maxFiles must be greater than 0"),e.filePath&&!e.filePath.endsWith(".log")&&t.push("filePath should end with .log extension"),t}(this.config);if(s.length>0)throw new Error(`Invalid logger configuration: ${s.join(", ")}`);this.initializeAdapters()}static getInstance(e={}){return r.instance||(r.instance=new r(e)),r.instance}static create(e={}){return new r(e)}static reset(){r.instance&&(r.instance.cleanup(),r.instance=null)}initializeAdapters(){if(this.config.enableConsole){const e=new s;e.configure(this.config),this.adapters.set("console",e)}const e=new o;e.configure(this.config),this.adapters.set("memory",e)}shouldLog(e){return e>=this.config.level}createLogEntry(e,t,s,o,r){const a={id:this.generateId(),timestamp:new Date,level:e,message:t,context:s,error:o,metadata:r};return this.config.includeStack&&o?.stack&&(a.stack=o.stack),a}generateId(){return function(){if("undefined"!=typeof require)try{const{randomUUID:e}=require("crypto");return e()}catch{}return"undefined"!=typeof globalThis&&globalThis.crypto&&globalThis.crypto.randomUUID?globalThis.crypto.randomUUID():"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,e=>{const t=16*Math.random()|0;return("x"===e?t:3&t|8).toString(16)})}()}async log(e){if(!this.shouldLog(e.level))return;const t=[];switch(this.config.strategy){case exports.LogStrategy.CONSOLE:this.adapters.has("console")&&t.push(this.adapters.get("console").log(e));break;case exports.LogStrategy.MEMORY:this.adapters.has("memory")&&t.push(this.adapters.get("memory").log(e));break;case exports.LogStrategy.HYBRID:for(const s of this.adapters.values())t.push(s.log(e));break;default:this.adapters.has("memory")&&t.push(this.adapters.get("memory").log(e))}await Promise.allSettled(t)}debug(e,t,s){const o=this.createLogEntry(exports.LogLevel.DEBUG,e,t,void 0,s);this.log(o)}info(e,t,s){const o=this.createLogEntry(exports.LogLevel.INFO,e,t,void 0,s);this.log(o)}warn(e,t,s){const o=this.createLogEntry(exports.LogLevel.WARN,e,t,void 0,s);this.log(o)}error(e,t,s,o){const r=this.createLogEntry(exports.LogLevel.ERROR,e,s,t,o);this.log(r)}fatal(e,t,s,o){const r=this.createLogEntry(exports.LogLevel.FATAL,e,s,t,o);this.log(r)}async getLogs(e,t){if(e&&this.adapters.has(e)){const s=this.adapters.get(e);if("getLogs"in s)return s.getLogs(t)}if(this.adapters.has("memory")){return this.adapters.get("memory").getLogs(t)}return[]}async getErrorLogs(e){return(await this.getLogs(void 0,e)).filter(e=>e.level>=exports.LogLevel.ERROR)}async clearLogs(e){if(e&&this.adapters.has(e)){const t=this.adapters.get(e);"clear"in t&&await t.clear()}else for(const e of this.adapters.values())"clear"in e&&await e.clear()}getStats(){const e={memory:0,database:0,file:0,errors:0,maxMemory:this.config.maxMemoryEntries||1e3,maxDatabase:0,maxFile:0};for(const[t,s]of this.adapters)if("getStats"in s){const o=s.getStats();e[t]=o.count||0,o.errors&&(e.errors+=o.errors)}return e}updateConfig(e){this.config={...this.config,...e};for(const e of this.adapters.values())e.configure&&e.configure(this.config)}async cleanup(){for(const e of this.adapters.values())e.cleanup&&await e.cleanup()}}r.instance=null;const a="development",n="production",i=()=>process.env.NODE_ENV===a,l=()=>process.env.NODE_ENV===n;class g{constructor(e={}){const{appSlug:t,userId:s,requestId:o,logger:a,enableConsole:n=!0,enableRemote:i=!1,remoteEndpoint:l="/api/logs",strategy:g=("development"===process.env.NODE_ENV?exports.LogStrategy.CONSOLE:exports.LogStrategy.MEMORY),level:c=("production"===process.env.NODE_ENV?exports.LogLevel.WARN:exports.LogLevel.DEBUG)}=e;this.appSlug=t,this.userId=s,this.requestId=o,this.enableRemote=i,this.remoteEndpoint=l,this.logger=a||r.getInstance({strategy:g,level:c,enableConsole:n&&(g===exports.LogStrategy.CONSOLE||g===exports.LogStrategy.HYBRID),enableDatabase:!1,enableFile:!1})}createContext(e){return{appSlug:this.appSlug,userId:this.userId,requestId:this.requestId,userAgent:"undefined"!=typeof window?navigator.userAgent:void 0,url:"undefined"!=typeof window?window.location.href:void 0,timestamp:(new Date).toISOString(),...e}}async sendToRemote(e,t,s,o,r){if(this.enableRemote&&"undefined"!=typeof window)try{await fetch(this.remoteEndpoint,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({level:e,message:t,context:s,error:o?{name:o.name,message:o.message,stack:o.stack}:void 0,metadata:r})})}catch(e){}}debug(e,t,s){const o=this.createContext(t);this.logger.debug(e,o,s),this.sendToRemote(exports.LogLevel.DEBUG,e,o,void 0,s)}info(e,t,s){const o=this.createContext(t);this.logger.info(e,o,s),this.sendToRemote(exports.LogLevel.INFO,e,o,void 0,s)}warn(e,t,s){const o=this.createContext(t);this.logger.warn(e,o,s),this.sendToRemote(exports.LogLevel.WARN,e,o,void 0,s)}error(e,t,s,o){const r=this.createContext(s);this.logger.error(e,t,r,o),this.sendToRemote(exports.LogLevel.ERROR,e,r,t,o)}fatal(e,t,s,o){const r=this.createContext(s);this.logger.fatal(e,t,r,o),this.sendToRemote(exports.LogLevel.FATAL,e,r,t,o)}}exports.NextJSClientLogger=g,exports.createNextJSClientLogger=function(e={}){return new g(e)},exports.useNextJSClientLogger=function(t={}){const{appSlug:s,userId:o,requestId:a,logger:n,enableConsole:g=!0,enableRemote:c=!1,remoteEndpoint:p="/api/logs",strategy:h=(i()?exports.LogStrategy.CONSOLE:exports.LogStrategy.MEMORY),level:u=(l()?exports.LogLevel.WARN:exports.LogLevel.DEBUG)}=t,L=e.useRef(null);e.useEffect(()=>{if("undefined"==typeof window)return;const e=n||r.getInstance({strategy:h,level:u,enableConsole:g&&(h===exports.LogStrategy.CONSOLE||h===exports.LogStrategy.HYBRID),enableDatabase:!1,enableFile:!1});L.current=e},[n,g]);const x=e.useCallback((e,t,r,n,i)=>{if(!L.current)return;const l={...i,appSlug:s,userId:o,requestId:a,userAgent:navigator.userAgent,url:window.location.href,timestamp:(new Date).toISOString()};switch(e){case exports.LogLevel.DEBUG:L.current.debug(t,r,l);break;case exports.LogLevel.INFO:L.current.info(t,r,l);break;case exports.LogLevel.WARN:L.current.warn(t,r,l);break;case exports.LogLevel.ERROR:L.current.error(t,n,r,l);break;case exports.LogLevel.FATAL:L.current.fatal(t,n,r,l)}c&&p&&d(e,t,r,n,l)},[s,o,a,c,p]),d=e.useCallback(async(e,t,s,o,r)=>{try{await fetch(p,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({level:e,message:t,context:s,error:o?{name:o.name,message:o.message,stack:o.stack}:void 0,metadata:r})})}catch(e){}},[p]);return{debug:e.useCallback((e,t,s)=>{x(exports.LogLevel.DEBUG,e,t,void 0,s)},[x]),info:e.useCallback((e,t,s)=>{x(exports.LogLevel.INFO,e,t,void 0,s)},[x]),warn:e.useCallback((e,t,s)=>{x(exports.LogLevel.WARN,e,t,void 0,s)},[x]),error:e.useCallback((e,t,s,o)=>{x(exports.LogLevel.ERROR,e,s,t,o)},[x]),fatal:e.useCallback((e,t,s,o)=>{x(exports.LogLevel.FATAL,e,s,t,o)},[x])}};
//# sourceMappingURL=nextjs-client.js.map
