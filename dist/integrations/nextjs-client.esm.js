import{useRef as e,useEffect as t,useCallback as s}from"react";import*as i from"fs";import*as a from"path";var LogLevel,LogStrategy;!function(LogLevel){LogLevel[LogLevel.DEBUG=0]="DEBUG",LogLevel[LogLevel.INFO=1]="INFO",LogLevel[LogLevel.WARN=2]="WARN",LogLevel[LogLevel.ERROR=3]="ERROR",LogLevel[LogLevel.FATAL=4]="FATAL"}(LogLevel||(LogLevel={})),function(LogStrategy){LogStrategy.CONSOLE="console",LogStrategy.MEMORY="memory",LogStrategy.DATABASE="database",LogStrategy.FILE="file",LogStrategy.HYBRID="hybrid"}(LogStrategy||(LogStrategy={}));const n={strategy:"production"===process.env.NODE_ENV?LogStrategy.HYBRID:LogStrategy.CONSOLE,level:"production"===process.env.NODE_ENV?LogLevel.WARN:LogLevel.DEBUG,maxMemoryEntries:parseInt(process.env.LOG_MAX_MEMORY_ENTRIES||"1000"),maxDatabaseEntries:parseInt(process.env.LOG_MAX_DATABASE_ENTRIES||"10000"),maxFileEntries:parseInt(process.env.LOG_MAX_FILE_ENTRIES||"5000"),enableConsole:"production"!==process.env.NODE_ENV,enableDatabase:!0,enableFile:"production"===process.env.NODE_ENV,databaseTable:"error_logs",filePath:process.env.LOG_FILE_PATH||"./logs/app.log",maxFileSize:parseInt(process.env.LOG_MAX_FILE_SIZE||"10485760"),maxFiles:parseInt(process.env.LOG_MAX_FILES||"5"),format:"production"===process.env.NODE_ENV?"json":"pretty",includeStack:!0,includeMetadata:!0};class o{constructor(){this.name="console",this.config={}}configure(e){this.config=e}async log(e){if(!this.config.enableConsole)return;const t=e.timestamp.toISOString(),s=LogLevel[e.level],i=e.context?` ${JSON.stringify(e.context)}`:"",a=e.metadata?` ${JSON.stringify(e.metadata)}`:"";let n=`[${t}] ${s}: ${e.message}${i}${a}`;switch(e.error&&this.config.includeStack&&(n+=`\nError: ${e.error.message}`,e.stack&&(n+=`\nStack: ${e.stack}`)),e.level){case LogLevel.DEBUG:case LogLevel.INFO:case LogLevel.WARN:case LogLevel.ERROR:case LogLevel.FATAL:}}}class r{constructor(){this.name="memory",this.config={},this.logs=[]}configure(e){this.config=e}async log(e){this.logs.push(e);const t=this.config.maxMemoryEntries||1e3;this.logs.length>t&&(this.logs=this.logs.slice(-t))}getLogs(e){const t=this.logs.slice();return e?t.slice(-e):t}getErrorLogs(e){const t=this.logs.filter(e=>e.level>=LogLevel.ERROR);return e?t.slice(-e):t}clear(){this.logs=[]}getStats(){const e=this.logs.filter(e=>e.level>=LogLevel.ERROR).length;return{count:this.logs.length,errors:e,maxEntries:this.config.maxMemoryEntries||1e3}}}class l{constructor(){this.name="database",this.config={},this.logs=[]}configure(e){this.config=e}async log(e){if(this.config.enableDatabase&&!(e.level<LogLevel.ERROR))try{this.logs.push(e);const t=this.config.maxDatabaseEntries||1e4;this.logs.length>t&&(this.logs=this.logs.slice(-t))}catch(e){}}async query(e={}){let t=this.logs.slice();return void 0!==e.level&&(t=t.filter(t=>t.level>=e.level)),e.startDate&&(t=t.filter(t=>t.timestamp>=e.startDate)),e.endDate&&(t=t.filter(t=>t.timestamp<=e.endDate)),e.userId&&(t=t.filter(t=>t.userId===e.userId)),e.appSlug&&(t=t.filter(t=>t.appSlug===e.appSlug)),e.offset&&(t=t.slice(e.offset)),e.limit&&(t=t.slice(0,e.limit)),t}async clear(){this.logs=[]}getStats(){const e=this.logs.filter(e=>e.level>=LogLevel.ERROR).length;return{count:this.logs.length,errors:e,maxEntries:this.config.maxDatabaseEntries||1e4}}}class c{constructor(){this.name="file",this.config={},this.fileConfig={},this.logs=[],this.filePath="",this.currentFileSize=0}configure(e){this.config={enableFile:e.enableFile||!1,...e},this.fileConfig={filePath:e.filePath||"./logs/app.log",directory:e.directory||"./logs",fileName:e.fileName||"app.log",maxFileSize:e.maxFileSize||10485760,maxFiles:e.maxFiles||5,enableRotation:void 0===e.enableRotation||e.enableRotation,enableCompression:e.enableCompression||!1,logLevels:e.logLevels||[LogLevel.ERROR,LogLevel.FATAL],includeTimestamp:void 0===e.includeTimestamp||e.includeTimestamp,includeLevel:void 0===e.includeLevel||e.includeLevel,format:e.format||"json",overwrite:e.overwrite||!1,append:void 0===e.append||e.append},this.setupFilePath(),this.ensureDirectoryExists()}setupFilePath(){this.fileConfig.filePath?this.filePath=this.fileConfig.filePath:this.fileConfig.directory&&this.fileConfig.fileName?this.filePath=a.join(this.fileConfig.directory,this.fileConfig.fileName):this.filePath="./logs/app.log"}ensureDirectoryExists(){const e=a.dirname(this.filePath);i.existsSync(e)||i.mkdirSync(e,{recursive:!0})}async log(e){if(this.config.enableFile&&(!this.fileConfig.logLevels||this.fileConfig.logLevels.includes(e.level)))try{this.logs.push(e);const t=this.config.maxFileEntries||5e3;this.logs.length>t&&(this.logs=this.logs.slice(-t)),await this.writeToFile(e),this.fileConfig.enableRotation&&await this.rotateIfNeeded()}catch(e){}}async writeToFile(e){const t=this.formatLogEntry(e),s=i.existsSync(this.filePath);this.fileConfig.overwrite&&!s?(i.writeFileSync(this.filePath,t+"\n"),this.currentFileSize=t.length+1):this.fileConfig.append||s?(i.appendFileSync(this.filePath,t+"\n"),this.currentFileSize+=t.length+1):(i.writeFileSync(this.filePath,t+"\n"),this.currentFileSize=t.length+1)}formatLogEntry(e){const t={};!1!==this.fileConfig.includeTimestamp&&(t.timestamp=e.timestamp.toISOString()),!1!==this.fileConfig.includeLevel&&(t.level=LogLevel[e.level]),t.message=e.message,e.context&&(t.context=e.context),e.metadata&&(t.metadata=e.metadata),e.userId&&(t.userId=e.userId),e.requestId&&(t.requestId=e.requestId),e.appSlug&&(t.appSlug=e.appSlug),e.error&&(t.error=e.error.message),e.stack&&(t.stack=e.stack);const s=this.fileConfig.format||"json";if("json"===s)return JSON.stringify(t);if("pretty"===s)return JSON.stringify(t,null,2);{const s=!1!==this.fileConfig.includeTimestamp?`[${t.timestamp}] `:"",i=!1!==this.fileConfig.includeLevel?`${t.level} `:"",a=e.context?` ${JSON.stringify(e.context)}`:"",n=e.metadata?` ${JSON.stringify(e.metadata)}`:"";return`${s}${i}${t.message}${a}${n}`}}async rotateIfNeeded(){try{const e=i.statSync(this.filePath),t=this.fileConfig.maxFileSize||10485760;e.size>t&&await this.rotateFile()}catch(e){}}async rotateFile(){const e=this.fileConfig.maxFiles||5,t=this.filePath.replace(".log","");for(let s=e-1;s>0;s--){const a=`${t}.${s}.log`,n=`${t}.${s+1}.log`;i.existsSync(a)&&(s===e-1?i.unlinkSync(a):i.renameSync(a,n))}i.existsSync(this.filePath)&&(i.renameSync(this.filePath,`${t}.1.log`),this.currentFileSize=0)}getStats(){const e=this.logs.filter(e=>e.level>=LogLevel.ERROR).length;return{count:this.logs.length,errors:e,maxEntries:this.config.maxFileEntries||5e3,filePath:this.filePath}}async cleanup(){}}class LoggerService{constructor(e={}){this.adapters=new Map,this.config=function(e={}){return{...n,...e}}(e);const t=function(e){const t=[];return e.maxMemoryEntries&&e.maxMemoryEntries<1&&t.push("maxMemoryEntries must be greater than 0"),e.maxDatabaseEntries&&e.maxDatabaseEntries<1&&t.push("maxDatabaseEntries must be greater than 0"),e.maxFileEntries&&e.maxFileEntries<1&&t.push("maxFileEntries must be greater than 0"),e.maxFileSize&&e.maxFileSize<1024&&t.push("maxFileSize must be at least 1KB"),e.maxFiles&&e.maxFiles<1&&t.push("maxFiles must be greater than 0"),e.filePath&&!e.filePath.endsWith(".log")&&t.push("filePath should end with .log extension"),t}(this.config);if(t.length>0)throw new Error(`Invalid logger configuration: ${t.join(", ")}`);this.initializeAdapters()}static getInstance(e){return LoggerService.instance||(LoggerService.instance=new LoggerService(e)),LoggerService.instance}static create(e={}){return new LoggerService(e)}static reset(){LoggerService.instance&&(LoggerService.instance.cleanup(),LoggerService.instance=null)}initializeAdapters(){if(this.config.enableConsole){const e=new o;e.configure(this.config),this.adapters.set("console",e)}const e=new r;if(e.configure(this.config),this.adapters.set("memory",e),this.config.enableDatabase){const e=new l;e.configure(this.config),this.adapters.set("database",e)}if(this.config.enableFile){const e=new c;e.configure(this.config),this.adapters.set("file",e)}}shouldLog(e){return e>=this.config.level}createLogEntry(e,t,s,i,a){const n={id:this.generateId(),timestamp:new Date,level:e,message:t,context:s,error:i,metadata:a};return this.config.includeStack&&i?.stack&&(n.stack=i.stack),n}generateId(){return function(){if("undefined"!=typeof require)try{const{randomUUID:e}=require("crypto");return e()}catch{}return"undefined"!=typeof globalThis&&globalThis.crypto&&globalThis.crypto.randomUUID?globalThis.crypto.randomUUID():"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,e=>{const t=16*Math.random()|0;return("x"===e?t:3&t|8).toString(16)})}()}async log(e){if(!this.shouldLog(e.level))return;const t=[];switch(this.config.strategy){case LogStrategy.CONSOLE:this.adapters.has("console")&&t.push(this.adapters.get("console").log(e));break;case LogStrategy.MEMORY:this.adapters.has("memory")&&t.push(this.adapters.get("memory").log(e));break;case LogStrategy.DATABASE:this.adapters.has("database")&&t.push(this.adapters.get("database").log(e));break;case LogStrategy.FILE:this.adapters.has("file")&&t.push(this.adapters.get("file").log(e));break;case LogStrategy.HYBRID:for(const s of this.adapters.values())t.push(s.log(e))}await Promise.allSettled(t)}debug(e,t,s){const i=this.createLogEntry(LogLevel.DEBUG,e,t,void 0,s);this.log(i)}info(e,t,s){const i=this.createLogEntry(LogLevel.INFO,e,t,void 0,s);this.log(i)}warn(e,t,s){const i=this.createLogEntry(LogLevel.WARN,e,t,void 0,s);this.log(i)}error(e,t,s,i){const a=this.createLogEntry(LogLevel.ERROR,e,s,t,i);this.log(a)}fatal(e,t,s,i){const a=this.createLogEntry(LogLevel.FATAL,e,s,t,i);this.log(a)}async getLogs(e,t){if(e&&this.adapters.has(e)){const s=this.adapters.get(e);if("query"in s)return s.query({limit:t})}if(this.adapters.has("memory")){return this.adapters.get("memory").getLogs(t)}return[]}async getErrorLogs(e){return(await this.getLogs(void 0,e)).filter(e=>e.level>=LogLevel.ERROR)}async clearLogs(e){if(e&&this.adapters.has(e)){const t=this.adapters.get(e);"clear"in t&&await t.clear()}else for(const e of this.adapters.values())"clear"in e&&await e.clear()}getStats(){const e={memory:0,database:0,file:0,errors:0,maxMemory:this.config.maxMemoryEntries||1e3,maxDatabase:this.config.maxDatabaseEntries||1e4,maxFile:this.config.maxFileEntries||5e3};for(const[t,s]of this.adapters)if("getStats"in s){const i=s.getStats();e[t]=i.count||0,i.errors&&(e.errors+=i.errors)}return e}updateConfig(e){this.config={...this.config,...e};for(const e of this.adapters.values())e.configure&&e.configure(this.config)}async cleanup(){for(const e of this.adapters.values())e.cleanup&&await e.cleanup()}}LoggerService.instance=null;const h="development",g="production",f=()=>process.env.NODE_ENV===h,u=()=>process.env.NODE_ENV===g;function d(i={}){const{appSlug:a,userId:n,requestId:o,logger:r,enableConsole:l=!0,enableRemote:c=!1,remoteEndpoint:h="/api/logs",strategy:g=(f()?LogStrategy.CONSOLE:LogStrategy.MEMORY),level:d=(u()?LogLevel.WARN:LogLevel.DEBUG)}=i,m=e(null);t(()=>{if("undefined"==typeof window)return;const e=r||LoggerService.getInstance({strategy:g,level:d,enableConsole:l&&(g===LogStrategy.CONSOLE||g===LogStrategy.HYBRID),enableDatabase:!1,enableFile:!1});m.current=e},[r,l]);const p=s((e,t,s,i,r)=>{if(!m.current)return;const l={...r,appSlug:a,userId:n,requestId:o,userAgent:navigator.userAgent,url:window.location.href,timestamp:(new Date).toISOString()};switch(e){case LogLevel.DEBUG:m.current.debug(t,s,l);break;case LogLevel.INFO:m.current.info(t,s,l);break;case LogLevel.WARN:m.current.warn(t,s,l);break;case LogLevel.ERROR:m.current.error(t,i,s,l);break;case LogLevel.FATAL:m.current.fatal(t,i,s,l)}c&&h&&E(e,t,s,i,l)},[a,n,o,c,h]),E=s(async(e,t,s,i,a)=>{try{await fetch(h,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({level:e,message:t,context:s,error:i?{name:i.name,message:i.message,stack:i.stack}:void 0,metadata:a})})}catch(e){}},[h]);return{debug:s((e,t,s)=>{p(LogLevel.DEBUG,e,t,void 0,s)},[p]),info:s((e,t,s)=>{p(LogLevel.INFO,e,t,void 0,s)},[p]),warn:s((e,t,s)=>{p(LogLevel.WARN,e,t,void 0,s)},[p]),error:s((e,t,s,i)=>{p(LogLevel.ERROR,e,s,t,i)},[p]),fatal:s((e,t,s,i)=>{p(LogLevel.FATAL,e,s,t,i)},[p])}}class m{constructor(e={}){const{appSlug:t,userId:s,requestId:i,logger:a,enableConsole:n=!0,enableRemote:o=!1,remoteEndpoint:r="/api/logs",strategy:l=("development"===process.env.NODE_ENV?LogStrategy.CONSOLE:LogStrategy.MEMORY),level:c=("production"===process.env.NODE_ENV?LogLevel.WARN:LogLevel.DEBUG)}=e;this.appSlug=t,this.userId=s,this.requestId=i,this.enableRemote=o,this.remoteEndpoint=r,this.logger=a||LoggerService.getInstance({strategy:l,level:c,enableConsole:n&&(l===LogStrategy.CONSOLE||l===LogStrategy.HYBRID),enableDatabase:!1,enableFile:!1})}createContext(e){return{appSlug:this.appSlug,userId:this.userId,requestId:this.requestId,userAgent:"undefined"!=typeof window?navigator.userAgent:void 0,url:"undefined"!=typeof window?window.location.href:void 0,timestamp:(new Date).toISOString(),...e}}async sendToRemote(e,t,s,i,a){if(this.enableRemote&&"undefined"!=typeof window)try{await fetch(this.remoteEndpoint,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({level:e,message:t,context:s,error:i?{name:i.name,message:i.message,stack:i.stack}:void 0,metadata:a})})}catch(e){}}debug(e,t,s){const i=this.createContext(t);this.logger.debug(e,i,s),this.sendToRemote(LogLevel.DEBUG,e,i,void 0,s)}info(e,t,s){const i=this.createContext(t);this.logger.info(e,i,s),this.sendToRemote(LogLevel.INFO,e,i,void 0,s)}warn(e,t,s){const i=this.createContext(t);this.logger.warn(e,i,s),this.sendToRemote(LogLevel.WARN,e,i,void 0,s)}error(e,t,s,i){const a=this.createContext(s);this.logger.error(e,t,a,i),this.sendToRemote(LogLevel.ERROR,e,a,t,i)}fatal(e,t,s,i){const a=this.createContext(s);this.logger.fatal(e,t,a,i),this.sendToRemote(LogLevel.FATAL,e,a,t,i)}}function p(e={}){return new m(e)}export{m as NextJSClientLogger,p as createNextJSClientLogger,d as useNextJSClientLogger};
//# sourceMappingURL=nextjs-client.esm.js.map
