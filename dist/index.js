"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var e=require("fs"),t=require("path"),s=require("react");function r(e){var t=Object.create(null);return e&&Object.keys(e).forEach(function(s){if("default"!==s){var r=Object.getOwnPropertyDescriptor(e,s);Object.defineProperty(t,s,r.get?r:{enumerable:!0,get:function(){return e[s]}})}}),t.default=e,Object.freeze(t)}var LogLevel,LogStrategy,o=r(e),a=r(t);exports.LogLevel=void 0,(LogLevel=exports.LogLevel||(exports.LogLevel={}))[LogLevel.DEBUG=0]="DEBUG",LogLevel[LogLevel.INFO=1]="INFO",LogLevel[LogLevel.WARN=2]="WARN",LogLevel[LogLevel.ERROR=3]="ERROR",LogLevel[LogLevel.FATAL=4]="FATAL",exports.LogStrategy=void 0,(LogStrategy=exports.LogStrategy||(exports.LogStrategy={})).CONSOLE="console",LogStrategy.MEMORY="memory",LogStrategy.DATABASE="database",LogStrategy.FILE="file",LogStrategy.HYBRID="hybrid";const n={strategy:"production"===process.env.NODE_ENV?exports.LogStrategy.HYBRID:exports.LogStrategy.CONSOLE,level:"production"===process.env.NODE_ENV?exports.LogLevel.WARN:exports.LogLevel.DEBUG,maxMemoryEntries:parseInt(process.env.LOG_MAX_MEMORY_ENTRIES||"1000"),maxDatabaseEntries:parseInt(process.env.LOG_MAX_DATABASE_ENTRIES||"10000"),maxFileEntries:parseInt(process.env.LOG_MAX_FILE_ENTRIES||"5000"),enableConsole:"production"!==process.env.NODE_ENV,enableDatabase:!0,enableFile:"production"===process.env.NODE_ENV,databaseTable:"error_logs",filePath:process.env.LOG_FILE_PATH||"./logs/app.log",maxFileSize:parseInt(process.env.LOG_MAX_FILE_SIZE||"10485760"),maxFiles:parseInt(process.env.LOG_MAX_FILES||"5"),format:"production"===process.env.NODE_ENV?"json":"pretty",includeStack:!0,includeMetadata:!0};function i(e={}){return{...n,...e}}function l(e){const t=[];return e.maxMemoryEntries&&e.maxMemoryEntries<1&&t.push("maxMemoryEntries must be greater than 0"),e.maxDatabaseEntries&&e.maxDatabaseEntries<1&&t.push("maxDatabaseEntries must be greater than 0"),e.maxFileEntries&&e.maxFileEntries<1&&t.push("maxFileEntries must be greater than 0"),e.maxFileSize&&e.maxFileSize<1024&&t.push("maxFileSize must be at least 1KB"),e.maxFiles&&e.maxFiles<1&&t.push("maxFiles must be greater than 0"),e.filePath&&!e.filePath.endsWith(".log")&&t.push("filePath should end with .log extension"),t}class g{constructor(){this.name="console",this.config={}}configure(e){this.config=e}async log(e){if(!this.config.enableConsole)return;const t=e.timestamp.toISOString(),s=exports.LogLevel[e.level],r=e.context?` ${JSON.stringify(e.context)}`:"",o=e.metadata?` ${JSON.stringify(e.metadata)}`:"";let a=`[${t}] ${s}: ${e.message}${r}${o}`;switch(e.error&&this.config.includeStack&&(a+=`\nError: ${e.error.message}`,e.stack&&(a+=`\nStack: ${e.stack}`)),e.level){case exports.LogLevel.DEBUG:case exports.LogLevel.INFO:case exports.LogLevel.WARN:case exports.LogLevel.ERROR:case exports.LogLevel.FATAL:}}}class c{constructor(){this.name="memory",this.config={},this.logs=[]}configure(e){this.config=e}async log(e){this.logs.push(e);const t=this.config.maxMemoryEntries||1e3;this.logs.length>t&&(this.logs=this.logs.slice(-t))}getLogs(e){const t=this.logs.slice();return e?t.slice(-e):t}getErrorLogs(e){const t=this.logs.filter(e=>e.level>=exports.LogLevel.ERROR);return e?t.slice(-e):t}clear(){this.logs=[]}getStats(){const e=this.logs.filter(e=>e.level>=exports.LogLevel.ERROR).length;return{count:this.logs.length,errors:e,maxEntries:this.config.maxMemoryEntries||1e3}}}class u{constructor(){this.name="database",this.config={},this.logs=[]}configure(e){this.config=e}async log(e){if(this.config.enableDatabase&&!(e.level<exports.LogLevel.ERROR))try{this.logs.push(e);const t=this.config.maxDatabaseEntries||1e4;this.logs.length>t&&(this.logs=this.logs.slice(-t))}catch(e){}}async query(e={}){let t=this.logs.slice();return void 0!==e.level&&(t=t.filter(t=>t.level>=e.level)),e.startDate&&(t=t.filter(t=>t.timestamp>=e.startDate)),e.endDate&&(t=t.filter(t=>t.timestamp<=e.endDate)),e.userId&&(t=t.filter(t=>t.userId===e.userId)),e.appSlug&&(t=t.filter(t=>t.appSlug===e.appSlug)),e.offset&&(t=t.slice(e.offset)),e.limit&&(t=t.slice(0,e.limit)),t}async clear(){this.logs=[]}getStats(){const e=this.logs.filter(e=>e.level>=exports.LogLevel.ERROR).length;return{count:this.logs.length,errors:e,maxEntries:this.config.maxDatabaseEntries||1e4}}}class h{constructor(){this.name="file",this.config={},this.fileConfig={},this.logs=[],this.filePath="",this.currentFileSize=0}configure(e){this.config={enableFile:e.enableFile||!1,...e},this.fileConfig={filePath:e.filePath||"./logs/app.log",directory:e.directory||"./logs",fileName:e.fileName||"app.log",maxFileSize:e.maxFileSize||10485760,maxFiles:e.maxFiles||5,enableRotation:void 0===e.enableRotation||e.enableRotation,enableCompression:e.enableCompression||!1,logLevels:e.logLevels||[exports.LogLevel.ERROR,exports.LogLevel.FATAL],includeTimestamp:void 0===e.includeTimestamp||e.includeTimestamp,includeLevel:void 0===e.includeLevel||e.includeLevel,format:e.format||"json",overwrite:e.overwrite||!1,append:void 0===e.append||e.append},this.setupFilePath(),this.ensureDirectoryExists()}setupFilePath(){this.fileConfig.filePath?this.filePath=this.fileConfig.filePath:this.fileConfig.directory&&this.fileConfig.fileName?this.filePath=a.join(this.fileConfig.directory,this.fileConfig.fileName):this.filePath="./logs/app.log"}ensureDirectoryExists(){const e=a.dirname(this.filePath);o.existsSync(e)||o.mkdirSync(e,{recursive:!0})}async log(e){if(this.config.enableFile&&(!this.fileConfig.logLevels||this.fileConfig.logLevels.includes(e.level)))try{this.logs.push(e);const t=this.config.maxFileEntries||5e3;this.logs.length>t&&(this.logs=this.logs.slice(-t)),await this.writeToFile(e),this.fileConfig.enableRotation&&await this.rotateIfNeeded()}catch(e){}}async writeToFile(e){const t=this.formatLogEntry(e),s=o.existsSync(this.filePath);this.fileConfig.overwrite&&!s?(o.writeFileSync(this.filePath,t+"\n"),this.currentFileSize=t.length+1):this.fileConfig.append||s?(o.appendFileSync(this.filePath,t+"\n"),this.currentFileSize+=t.length+1):(o.writeFileSync(this.filePath,t+"\n"),this.currentFileSize=t.length+1)}formatLogEntry(e){const t={};!1!==this.fileConfig.includeTimestamp&&(t.timestamp=e.timestamp.toISOString()),!1!==this.fileConfig.includeLevel&&(t.level=exports.LogLevel[e.level]),t.message=e.message,e.context&&(t.context=e.context),e.metadata&&(t.metadata=e.metadata),e.userId&&(t.userId=e.userId),e.requestId&&(t.requestId=e.requestId),e.appSlug&&(t.appSlug=e.appSlug),e.error&&(t.error=e.error.message),e.stack&&(t.stack=e.stack);const s=this.fileConfig.format||"json";if("json"===s)return JSON.stringify(t);if("pretty"===s)return JSON.stringify(t,null,2);{const s=!1!==this.fileConfig.includeTimestamp?`[${t.timestamp}] `:"",r=!1!==this.fileConfig.includeLevel?`${t.level} `:"",o=e.context?` ${JSON.stringify(e.context)}`:"",a=e.metadata?` ${JSON.stringify(e.metadata)}`:"";return`${s}${r}${t.message}${o}${a}`}}async rotateIfNeeded(){try{const e=o.statSync(this.filePath),t=this.fileConfig.maxFileSize||10485760;e.size>t&&await this.rotateFile()}catch(e){}}async rotateFile(){const e=this.fileConfig.maxFiles||5,t=this.filePath.replace(".log","");for(let s=e-1;s>0;s--){const r=`${t}.${s}.log`,a=`${t}.${s+1}.log`;o.existsSync(r)&&(s===e-1?o.unlinkSync(r):o.renameSync(r,a))}o.existsSync(this.filePath)&&(o.renameSync(this.filePath,`${t}.1.log`),this.currentFileSize=0)}getStats(){const e=this.logs.filter(e=>e.level>=exports.LogLevel.ERROR).length;return{count:this.logs.length,errors:e,maxEntries:this.config.maxFileEntries||5e3,filePath:this.filePath}}async cleanup(){}}function p(){if("undefined"!=typeof require)try{const{randomUUID:e}=require("crypto");return e()}catch{}return"undefined"!=typeof globalThis&&globalThis.crypto&&globalThis.crypto.randomUUID?globalThis.crypto.randomUUID():"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,e=>{const t=16*Math.random()|0;return("x"===e?t:3&t|8).toString(16)})}function d(){return Math.random().toString(36).substring(2,10)}function f(e){const t=d();return e?`${e}-${t}`:t}class LoggerService{constructor(e={}){this.adapters=new Map,this.config=i(e);const t=l(this.config);if(t.length>0)throw new Error(`Invalid logger configuration: ${t.join(", ")}`);this.initializeAdapters()}static getInstance(e){return LoggerService.instance||(LoggerService.instance=new LoggerService(e)),LoggerService.instance}static create(e={}){return new LoggerService(e)}static reset(){LoggerService.instance&&(LoggerService.instance.cleanup(),LoggerService.instance=null)}initializeAdapters(){if(this.config.enableConsole){const e=new g;e.configure(this.config),this.adapters.set("console",e)}const e=new c;if(e.configure(this.config),this.adapters.set("memory",e),this.config.enableDatabase){const e=new u;e.configure(this.config),this.adapters.set("database",e)}if(this.config.enableFile){const e=new h;e.configure(this.config),this.adapters.set("file",e)}}shouldLog(e){return e>=this.config.level}createLogEntry(e,t,s,r,o){const a={id:this.generateId(),timestamp:new Date,level:e,message:t,context:s,error:r,metadata:o};return this.config.includeStack&&r?.stack&&(a.stack=r.stack),a}generateId(){return p()}async log(e){if(!this.shouldLog(e.level))return;const t=[];switch(this.config.strategy){case exports.LogStrategy.CONSOLE:this.adapters.has("console")&&t.push(this.adapters.get("console").log(e));break;case exports.LogStrategy.MEMORY:this.adapters.has("memory")&&t.push(this.adapters.get("memory").log(e));break;case exports.LogStrategy.DATABASE:this.adapters.has("database")&&t.push(this.adapters.get("database").log(e));break;case exports.LogStrategy.FILE:this.adapters.has("file")&&t.push(this.adapters.get("file").log(e));break;case exports.LogStrategy.HYBRID:for(const s of this.adapters.values())t.push(s.log(e))}await Promise.allSettled(t)}debug(e,t,s){const r=this.createLogEntry(exports.LogLevel.DEBUG,e,t,void 0,s);this.log(r)}info(e,t,s){const r=this.createLogEntry(exports.LogLevel.INFO,e,t,void 0,s);this.log(r)}warn(e,t,s){const r=this.createLogEntry(exports.LogLevel.WARN,e,t,void 0,s);this.log(r)}error(e,t,s,r){const o=this.createLogEntry(exports.LogLevel.ERROR,e,s,t,r);this.log(o)}fatal(e,t,s,r){const o=this.createLogEntry(exports.LogLevel.FATAL,e,s,t,r);this.log(o)}async getLogs(e,t){if(e&&this.adapters.has(e)){const s=this.adapters.get(e);if("query"in s)return s.query({limit:t})}if(this.adapters.has("memory")){return this.adapters.get("memory").getLogs(t)}return[]}async getErrorLogs(e){return(await this.getLogs(void 0,e)).filter(e=>e.level>=exports.LogLevel.ERROR)}async clearLogs(e){if(e&&this.adapters.has(e)){const t=this.adapters.get(e);"clear"in t&&await t.clear()}else for(const e of this.adapters.values())"clear"in e&&await e.clear()}getStats(){const e={memory:0,database:0,file:0,errors:0,maxMemory:this.config.maxMemoryEntries||1e3,maxDatabase:this.config.maxDatabaseEntries||1e4,maxFile:this.config.maxFileEntries||5e3};for(const[t,s]of this.adapters)if("getStats"in s){const r=s.getStats();e[t]=r.count||0,r.errors&&(e.errors+=r.errors)}return e}updateConfig(e){this.config={...this.config,...e};for(const e of this.adapters.values())e.configure&&e.configure(this.config)}async cleanup(){for(const e of this.adapters.values())e.cleanup&&await e.cleanup()}}LoggerService.instance=null;class x{constructor(e){this.requestId="",this.logger=e||LoggerService.getInstance()}static getInstance(e){return x.instance||(x.instance=new x(e)),x.instance}static reset(){x.instance=null}setRequestContext(e){this.requestId=e?.headers.get("x-request-id")||this.generateId(),this.appSlug=this.extractAppSlug(e),this.userId=this.extractUserId(e)}generateId(){return f("req")}extractAppSlug(e){if(!e)return;const t=new URL(e.url).pathname.split("/"),s=t.findIndex(e=>"apps"===e)+1;if(s>0&&t[s])return t[s];const r=t.findIndex(e=>"api"===e);return r>0&&t[r+1]&&"admin"!==t[r+1]?t[r+1]:void 0}extractUserId(e){if(!e)return;const t=e.headers.get("authorization");return t?.startsWith("Bearer ")?"user-from-token":void 0}createContext(e){return{requestId:this.requestId,appSlug:this.appSlug,userId:this.userId,...e}}debug(e,t){this.logger.debug(e,this.createContext(t))}info(e,t){this.logger.info(e,this.createContext(t))}warn(e,t){this.logger.warn(e,this.createContext(t))}error(e,t,s){this.logger.error(e,t,this.createContext(s))}fatal(e,t,s){this.logger.fatal(e,t,this.createContext(s))}}const L=x.getInstance();const m="development",v="production",y=()=>process.env.NODE_ENV===m,E=()=>process.env.NODE_ENV===v;class S{constructor(e={}){const{appSlug:t,userId:s,requestId:r,logger:o,enableConsole:a=!0,enableRemote:n=!1,remoteEndpoint:i="/api/logs",strategy:l=("development"===process.env.NODE_ENV?exports.LogStrategy.CONSOLE:exports.LogStrategy.MEMORY),level:g=("production"===process.env.NODE_ENV?exports.LogLevel.WARN:exports.LogLevel.DEBUG)}=e;this.appSlug=t,this.userId=s,this.requestId=r,this.enableRemote=n,this.remoteEndpoint=i,this.logger=o||LoggerService.getInstance({strategy:l,level:g,enableConsole:a&&(l===exports.LogStrategy.CONSOLE||l===exports.LogStrategy.HYBRID),enableDatabase:!1,enableFile:!1})}createContext(e){return{appSlug:this.appSlug,userId:this.userId,requestId:this.requestId,userAgent:"undefined"!=typeof window?navigator.userAgent:void 0,url:"undefined"!=typeof window?window.location.href:void 0,timestamp:(new Date).toISOString(),...e}}async sendToRemote(e,t,s,r,o){if(this.enableRemote&&"undefined"!=typeof window)try{await fetch(this.remoteEndpoint,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({level:e,message:t,context:s,error:r?{name:r.name,message:r.message,stack:r.stack}:void 0,metadata:o})})}catch(e){}}debug(e,t,s){const r=this.createContext(t);this.logger.debug(e,r,s),this.sendToRemote(exports.LogLevel.DEBUG,e,r,void 0,s)}info(e,t,s){const r=this.createContext(t);this.logger.info(e,r,s),this.sendToRemote(exports.LogLevel.INFO,e,r,void 0,s)}warn(e,t,s){const r=this.createContext(t);this.logger.warn(e,r,s),this.sendToRemote(exports.LogLevel.WARN,e,r,void 0,s)}error(e,t,s,r){const o=this.createContext(s);this.logger.error(e,t,o,r),this.sendToRemote(exports.LogLevel.ERROR,e,o,t,r)}fatal(e,t,s,r){const o=this.createContext(s);this.logger.fatal(e,t,o,r),this.sendToRemote(exports.LogLevel.FATAL,e,o,t,r)}}function I(){return f("req")}class b{static resetAll(){LoggerService.reset(),x.reset()}static getState(){return{loggerService:LoggerService.getInstance(),serverLogger:x.getInstance()}}static isInitialized(){try{return LoggerService.getInstance(),x.getInstance(),!0}catch{return!1}}}const R=b.resetAll,O=b.isInitialized;function C(e){return LoggerService.getInstance(e)}exports.ConsoleAdapter=g,exports.DatabaseAdapter=u,exports.FileAdapter=h,exports.LoggerService=LoggerService,exports.MemoryAdapter=c,exports.NextJSClientLogger=S,exports.ServerLogger=x,exports.SingletonManager=b,exports.areSingletonsInitialized=O,exports.createConfig=i,exports.createErrorHandler=function(e){const t=e||LoggerService.getInstance();return(e,s,r,o)=>{const a=s.headers["x-request-id"]||I();t.error("Unhandled error",e,{method:s.method,url:s.url,requestId:a,stack:e.stack});const n="development"===process.env.NODE_ENV;r.status(500).json({error:"Internal Server Error",requestId:a,...n&&{message:e.message,stack:e.stack}})}},exports.createExpressLogger=function(e){return LoggerService.getInstance({strategy:exports.LogStrategy.HYBRID,enableConsole:!0,enableDatabase:!0,enableFile:E(),...e})},exports.createLoggingMiddleware=function(e){const t=e||LoggerService.getInstance();return(e,s,r)=>{const o=Date.now(),a=e.headers["x-request-id"]||I();s.setHeader("x-request-id",a),t.info("Request started",{method:e.method,url:e.url,userAgent:e.get("User-Agent"),ip:e.ip,requestId:a});const n=s.end;s.end=function(r,i){const l=Date.now()-o;return t.info("Request completed",{method:e.method,url:e.url,statusCode:s.statusCode,duration:`${l}ms`,requestId:a}),n.call(this,r,i)},s.on("error",s=>{t.error("Response error",s,{method:e.method,url:e.url,requestId:a})}),r()}},exports.createNextJSClientLogger=function(e={}){return new S(e)},exports.default=C,exports.generateRequestId=f,exports.generateShortId=d,exports.generateUUID=p,exports.getLogger=C,exports.getServerLogger=function(e,t){const s=t?x.getInstance(t):L;return s.setRequestContext(e),s},exports.logApiError=(e,t,s,r,o)=>{const a=o?x.getInstance(o):L;a.setRequestContext(e),a.error(t,s,r)},exports.logApiInfo=(e,t,s,r)=>{const o=r?x.getInstance(r):L;o.setRequestContext(e),o.info(t,s)},exports.logApiWarn=(e,t,s,r)=>{const o=r?x.getInstance(r):L;o.setRequestContext(e),o.warn(t,s)},exports.logDebug=(e,t)=>{C().debug(e,t)},exports.logError=(e,t,s)=>{C().error(e,t,s)},exports.logFatal=(e,t,s)=>{C().fatal(e,t,s)},exports.logInfo=(e,t)=>{C().info(e,t)},exports.logWarn=(e,t)=>{C().warn(e,t)},exports.resetAllSingletons=R,exports.useLogger=function(e={}){const{appSlug:t,userId:r,requestId:o,logger:a}=e,n=s.useCallback((e,s,n,i,l)=>{const g={...l,appSlug:t,userId:r,requestId:o},c=a||LoggerService.getInstance();switch(e){case exports.LogLevel.DEBUG:c.debug(s,n,g);break;case exports.LogLevel.INFO:c.info(s,n,g);break;case exports.LogLevel.WARN:c.warn(s,n,g);break;case exports.LogLevel.ERROR:c.error(s,i,n,g);break;case exports.LogLevel.FATAL:c.fatal(s,i,n,g)}},[t,r,o,a]);return{debug:s.useCallback((e,t,s)=>{n(exports.LogLevel.DEBUG,e,t,void 0,s)},[n]),info:s.useCallback((e,t,s)=>{n(exports.LogLevel.INFO,e,t,void 0,s)},[n]),warn:s.useCallback((e,t,s)=>{n(exports.LogLevel.WARN,e,t,void 0,s)},[n]),error:s.useCallback((e,t,s,r)=>{n(exports.LogLevel.ERROR,e,s,t,r)},[n]),fatal:s.useCallback((e,t,s,r)=>{n(exports.LogLevel.FATAL,e,s,t,r)},[n])}},exports.useNextJSClientLogger=function(e={}){const{appSlug:t,userId:r,requestId:o,logger:a,enableConsole:n=!0,enableRemote:i=!1,remoteEndpoint:l="/api/logs",strategy:g=(y()?exports.LogStrategy.CONSOLE:exports.LogStrategy.MEMORY),level:c=(E()?exports.LogLevel.WARN:exports.LogLevel.DEBUG)}=e,u=s.useRef(null);s.useEffect(()=>{if("undefined"==typeof window)return;const e=a||LoggerService.getInstance({strategy:g,level:c,enableConsole:n&&(g===exports.LogStrategy.CONSOLE||g===exports.LogStrategy.HYBRID),enableDatabase:!1,enableFile:!1});u.current=e},[a,n]);const h=s.useCallback((e,s,a,n,g)=>{if(!u.current)return;const c={...g,appSlug:t,userId:r,requestId:o,userAgent:navigator.userAgent,url:window.location.href,timestamp:(new Date).toISOString()};switch(e){case exports.LogLevel.DEBUG:u.current.debug(s,a,c);break;case exports.LogLevel.INFO:u.current.info(s,a,c);break;case exports.LogLevel.WARN:u.current.warn(s,a,c);break;case exports.LogLevel.ERROR:u.current.error(s,n,a,c);break;case exports.LogLevel.FATAL:u.current.fatal(s,n,a,c)}i&&l&&p(e,s,a,n,c)},[t,r,o,i,l]),p=s.useCallback(async(e,t,s,r,o)=>{try{await fetch(l,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({level:e,message:t,context:s,error:r?{name:r.name,message:r.message,stack:r.stack}:void 0,metadata:o})})}catch(e){}},[l]);return{debug:s.useCallback((e,t,s)=>{h(exports.LogLevel.DEBUG,e,t,void 0,s)},[h]),info:s.useCallback((e,t,s)=>{h(exports.LogLevel.INFO,e,t,void 0,s)},[h]),warn:s.useCallback((e,t,s)=>{h(exports.LogLevel.WARN,e,t,void 0,s)},[h]),error:s.useCallback((e,t,s,r)=>{h(exports.LogLevel.ERROR,e,s,t,r)},[h]),fatal:s.useCallback((e,t,s,r)=>{h(exports.LogLevel.FATAL,e,s,t,r)},[h])}},exports.validateConfig=l;
//# sourceMappingURL=index.js.map
